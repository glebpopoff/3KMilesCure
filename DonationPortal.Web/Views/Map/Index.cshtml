@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <style type="text/css">
        html, body, #map-canvas {
            height: 100%;
            margin: 0;
            padding: 0;
        }
    </style>
    <script type="text/javascript"
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD0K-y2C9IH2lUf6_kOt8Dvd9TOlZq7sqk">
    </script>
    <script type="text/javascript" src="/ui/js/cSnapToRoute.js">
    </script>
    <script type="text/javascript" src="/Scripts/jquery-2.1.3.min.js"></script>
    <script type="text/javascript" src="/Scripts/underscore.min.js"></script>
    <script src="/ui/js/geoxml3.js"></script>
    <script type="text/javascript">

        var eventSlug = 'sebring-12';
        var riderSlug = 'sebring-12-hour-rider';

        function initialize() {

            $.getJSON('/api/v1/events/' + eventSlug + '/riders/' + riderSlug + '/').done(function (rider) {

                var mapOptions = {
                    center: { lat: rider.MapLatitude, lng: rider.MapLongitude },
                    zoom: rider.MapZoom,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                };

                var map = new google.maps.Map(document.getElementById('map-canvas'),
                    mapOptions);

                var marker = new google.maps.Marker({
                    position: { lat: rider.MarkerLatitude, lng: rider.MarkerLongitude },
                    map: map,
                    draggable: true
                });

                // when the map loads, it fires projection_changed.
                // we need to wait until then for the snap to line functionality.
                google.maps.event.addListenerOnce(map, "projection_changed", function () {

                    $.getJSON('/api/v1/events/' + eventSlug + '/riders/' + riderSlug + '/routes').done(function (routes) {

                        var lines = [];

                        for (var i = 0; i < routes.length; i++) {

                            var route = routes[i];

                            var line = new google.maps.Polyline({
                                path: _.map(route.Vertices, function (vertex) { return new google.maps.LatLng(vertex.Latitude, vertex.Longitude); }),
                                geodisc: true,
                                strokeColor: route.Color,
                                strokeOpacity: 1.0,
                                strokeWeight: 3
                            });

                            line.setMap(map);

                            lines.push(line);

                            google.maps.event.addListener(lines[i], 'click', function (e) {

                                marker.setPosition(e.latLng);
                            });

                        }

                        var oSnap;

                        google.maps.event.addListener(marker, 'dragstart', function () {

                            oSnap = new cSnapToRoute(map);
                            oSnap.init(map, marker, lines);
                        });

                        google.maps.event.addListener(marker, 'dragend', function () {

                            if (oSnap) {
                                oSnap.cancel();
                            }

                        });
                    });
                });
            });
        }

        google.maps.event.addDomListener(window, 'load', initialize);

    </script>
</head>
<body>
    <div id="map-canvas"></div>
</body>
</html>
